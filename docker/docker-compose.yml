# Docker compose File for the the MEVN stack applicaton

# When running the app with Docker, the port can be specified for each service (database, backend, frontend) in the `/docker/.env` file. Also, there is a possibility to set the database name, database user, and database password.
# Before running the docker-compose command a configuration must be done in the `.env` file of `/client/.env`. The `VUE_APP_BACKEND_HOST` variable must be set to the service name of the backend defined in `/docker/docker-compose.yml` file, which is geek-backend.
# This must be done before building the Image. After that, it can be changed back to localhost.

##### Running the App with docker-compose
# To run the app with docker-compose, the working dir of the cmd must be `/docker` (where the docker-compose file is located)
##### Start and rebuild Images
# To rebuild the Images before starting the app following command must be typed `docker-compose up --build`
##### Start without rebuild Images
# To start the docker-compose file just type in the following command `docker-compose up`
##### Basic commands for docker-compose
# - `docker-compose stop` -> Stops the whole app containers
# - `docker-compose down` -> Stops and removes the whole app containers
# - `docker-compose logs` -> Gets the logs of all containers included in the docker-compose file

version: "3.8"

# Network
networks:
  geek-network:
    driver: bridge

services:
  # Database
  geek-database:
    container_name: geek-database
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${PSQL_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${PSQL_PASSWORD}
      MONGO_INITDB_DATABASE: ${PSQL_DATABASE}
    ports:
      - ${HOST_DATABASE_PORT}:5432
    networks:
      - geek-network

  # Backend
  geek-backend:
    container_name: geek-backend
    build:
      context: ./..
      dockerfile: Dockerfile
    depends_on:
      - geek-database
    restart: always
    volumes:
      - ../:/app/src:ro
    ports:
      - ${HOST_BACKEND_PORT}:3000
    networks:
      - geek-network

  # Frontend
  geek-frontend:
    container_name: geek-frontend
    build:
      context: ./../client
      dockerfile: Dockerfile
    depends_on:
      - geek-backend
    restart: always
    ports:
      - ${HOST_FRONTEND_PORT}:8080
    networks:
      - geek-network
    volumes:
      - ../client:/app/src:ro
    environment:
      CHOKIDAR_USEPOLLING: 1
