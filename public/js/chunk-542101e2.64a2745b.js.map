{"version":3,"sources":["webpack:///../../../src/mixins/rippleable/index.ts","webpack:///./src/components/RoundsEditDialog.vue?0806","webpack:///./src/components/RoundsEditDialog.vue","webpack:///./src/components/RoundsEditDialog.vue?eed3","webpack:///./src/components/RoundsEditDialog.vue?b273","webpack:///../../../src/components/VSwitch/VSwitch.ts","webpack:///../../../src/mixins/selectable/index.ts"],"names":["name","directives","ripple","props","type","Boolean","default","methods","genRipple","data","this","value","center","$createElement","render","_vm","_h","_c","_self","attrs","on","submitRound","model","callback","$$v","toDelete","expression","staticRenderFns","round","Object","required","setup","$store","root","dispatch","_id","component","VSwitch","Touch","inset","loading","flat","computed","classes","String","role","validationState","hasError","hasColor","switchData","setTextColor","undefined","class","themeClasses","genDefaultSlot","genSwitch","switchAttrs","staticClass","genInput","left","right","onSwipeRight","genProgress","$slots","progress","color","size","width","indeterminate","onSwipeLeft","onChange","onKeydown","e","prop","event","id","inputValue","falseValue","trueValue","multiple","label","lazyValue","computedColor","isDark","isMultiple","Array","isActive","input","item","valueComparator","isDirty","rippleState","watch","genLabel","click","prevent","disabled","domProps","checked","blur","change","focus","keydown","ref","onBlur","onClick","length","onFocus"],"mappings":"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","file":"js/chunk-542101e2.64a2745b.js","sourcesContent":["// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('BaseDialog',{attrs:{\"activator-icon\":\"pencil-outline\",\"color\":\"#607d8b\",\"header\":\"Edit round info\",\"simple\":\"\"},on:{\"submit\":_vm.submitRound}},[_c('v-switch',{attrs:{\"label\":\"Delete round\",\"color\":\"error\",\"hide-details\":\"\"},model:{value:(_vm.toDelete),callback:function ($$v) {_vm.toDelete=$$v},expression:\"toDelete\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { defineComponent, toRefs, ref } from '@vue/composition-api';\n\nexport default defineComponent({\n  name: 'RoundsEditDialog',\n  props: {\n    round: {\n      type: Object,\n      required: true\n    }\n  },\n  setup(props, { root: { $store } }) {\n    const { round }: any = toRefs(props);\n\n    const toDelete = ref(false);\n\n    const submitRound = () => {\n      if (!toDelete.value) return;\n      $store.dispatch('rounds/deleteRound', round.value._id);\n    };\n\n    return {\n      submitRound,\n      toDelete\n    };\n  }\n});\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RoundsEditDialog.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RoundsEditDialog.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./RoundsEditDialog.vue?vue&type=template&id=3d7b35c0&\"\nimport script from \"./RoundsEditDialog.vue?vue&type=script&lang=ts&\"\nexport * from \"./RoundsEditDialog.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VSwitch } from 'vuetify/lib/components/VSwitch';\ninstallComponents(component, {VSwitch})\n","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      const { title, ...switchAttrs } = this.attrs$\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...switchAttrs,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\nexport function prevent (e: Event) {\n  e.preventDefault()\n}\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.isDisabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        // Label shouldn't cause the input to focus\n        click: prevent,\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n          click: prevent,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onClick (e: Event) {\n      this.onChange()\n      this.$emit('click', e)\n    },\n    onChange () {\n      if (!this.isInteractive) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n"],"sourceRoot":""}